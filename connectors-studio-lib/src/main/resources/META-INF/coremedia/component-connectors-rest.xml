<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:customize="http://www.coremedia.com/2007/coremedia-spring-beans-customization"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.coremedia.com/2007/coremedia-spring-beans-customization
        http://www.coremedia.com/2007/coremedia-spring-beans-customization.xsd">

  <import resource="classpath:META-INF/coremedia/component-connectors-lib.xml"/>
  <import resource="classpath:com/coremedia/rest/cap/cap-rest-service.xml"/>

  <bean id="connectorEntityResource" abstract="true" class="com.coremedia.blueprint.studio.connectors.rest.ConnectorEntityResource"/>

  <!-- Service Entity-->
  <bean id="connectorServiceResource" class="com.coremedia.blueprint.studio.connectors.rest.ConnectorServiceResource"
        scope="prototype" parent="connectorEntityResource">
    <property name="connectorContextProvider" ref="connectorContextProvider"/>
    <property name="sitesService" ref="sitesService" />
    <property name="connector" ref="connector" />
  </bean>

  <!-- Service Entity-->
  <bean id="connectorContentServiceResource" class="com.coremedia.blueprint.studio.connectors.rest.ConnectorContentServiceResource"
        scope="prototype" parent="connectorEntityResource">
    <property name="connectorContextProvider" ref="connectorContextProvider"/>
    <property name="sitesService" ref="sitesService" />
    <property name="connector" ref="connector" />
    <property name="contentRepository" ref="contentRepository" />
    <property name="connectorContentService" ref="connectorContentService" />
  </bean>

  <!-- Invalidation -->
  <bean id="connectorInvalidator" class="com.coremedia.blueprint.studio.connectors.rest.invalidation.ConnectorInvalidator">
    <property name="connectors" ref="connector" />
    <property name="linker" ref="linker" />
    <property name="id" value="connectorInvalidator" />
    <property name="capacity" value="${studio.rest.eventsCache.capacity:10000}"/>
    <property name="connectorNotificationService" ref="connectorNotificationService" />
  </bean>

  <bean id="connectorCategoryInvalidator" class="com.coremedia.blueprint.studio.connectors.rest.invalidation.ConnectorCategoryInvalidator">
    <property name="connectors" ref="connector" />
    <property name="linker" ref="linker" />
    <property name="id" value="connectorCategoryInvalidator" />
    <property name="capacity" value="${studio.rest.eventsCache.capacity:10000}"/>
  </bean>

  <!-- Content -->
  <bean id="connectorContentService" class="com.coremedia.blueprint.studio.connectors.rest.content.ConnectorContentService" scope="prototype">
    <property name="solrSearchService" ref="solrSearchService" />
    <property name="connectorContextProvider" ref="connectorContextProvider" />
    <property name="contentRepository" ref="contentRepository" />
    <property name="connectors" ref="connector" />
  </bean>

  <!-- Notifications-->
  <bean id="connectorNotificationService" class="com.coremedia.blueprint.studio.connectors.rest.notifications.ConnectorNotificationService">
    <property name="contentRepository" ref="contentRepository" />
  </bean>

  <bean id="connectorsResource" class="com.coremedia.blueprint.studio.connectors.rest.ConnectorsResource" scope="prototype">
    <property name="connector" ref="connector" />
  </bean>

  <!-- Model Entities-->
  <bean id="connectorResource" class="com.coremedia.blueprint.studio.connectors.rest.ConnectorResource" scope="prototype">
    <property name="connector" ref="connector" />
  </bean>


  <bean id="connectorItemResource" class="com.coremedia.blueprint.studio.connectors.rest.ConnectorItemResource" scope="prototype"
        parent="connectorEntityResource">
    <property name="connectorPreviewConverters" ref="connectorPreviewConverters" />
    <property name="connectorMetaDataResolvers" ref="connectorMetaDataResolvers" />
    <property name="mimeTypeService" ref="mimeTypeService" />
    <property name="contentRepository" ref="contentRepository" />
    <property name="tempFileCacheService" ref="tempFileCacheService" />
  </bean>

  <bean id="connectorCategoryResource" class="com.coremedia.blueprint.studio.connectors.rest.ConnectorCategoryResource" scope="prototype"
        parent="connectorEntityResource">
    <property name="tempFileCacheService" ref="tempFileCacheService" />
    <property name="contentRepository" ref="contentRepository" />
    <property name="connectorContentUploadService" ref="connectorContentUploadService" />
  </bean>

  <bean id="connectorHttpFirewall"
        class="org.springframework.security.web.firewall.StrictHttpFirewall">
    <property name="allowSemicolon" value="true"/>
    <property name="allowUrlEncodedSlash" value="true" />
    <property name="allowUrlEncodedPercent" value="true"/>
  </bean>

  <customize:replace order="9999" id="customHttpFilterwall" bean="httpFirewall" custom-ref="connectorHttpFirewall"/>

  <bean id="connectorAttachmentHeaderFilter" class="com.coremedia.blueprint.studio.connectors.rest.AttachmentHeaderFilter" />

</beans>
